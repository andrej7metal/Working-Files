<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>